name: javscript lint

on:
  push:
    branches:
      - master
      - development
      - @jp/development
      paths:
        - 'src/javascript/**'
  pull_request:
    branches:
      - master
      - development
      - @jp/development
      paths:
        - 'src/javascript/**'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
          submodules: 'recursive'

      - name: Get node version from package.json
        id: project-node-version
        run: echo "::set-output name=version::$(node -p "require('./package.json').engines.node")"

      - name: Use Node.js ${{ steps.project-node-version.outputs.version }}
        uses: actions/setup-node@v1
        env:
          NODE_ENV: dev
        with:
          node-version: ${{ steps.project-node-version.outputs.version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        id: hCacheStep
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        # install dependencies from the cache and new dependencies if there is any
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Run Linter
        run: yarn lint
